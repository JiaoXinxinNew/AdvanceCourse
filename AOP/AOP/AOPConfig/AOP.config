<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Unity.Configuration"/>
  </configSections>
  <unity>
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Unity.Interception.Configuration"/>
    <containers>
      <container name="aopContainer">
        <extension type="Interception"/>
        <register type="AOP.AOP.IUserProcessor,AOP" mapTo="AOP.AOP.UserProcessor,AOP">
          <interceptor type="InterfaceInterceptor"/>
          <interceptionBehavior type="AOP.AOP.AuthorityBehavior, AOP"/>
          <interceptionBehavior type="AOP.AOP.Authority1Behavior, AOP"/>

          <!--方法执行之后的的类,执行之后的方法时反向的，先加载的后执行-->
          <interceptionBehavior type="AOP.AOP.ExceptionLoggingBehavior, AOP"/>
          <interceptionBehavior type="AOP.AOP.ExceptionLogging2Behavior, AOP"/>
        </register>
      </container>
    </containers>
  </unity>
</configuration>